using System.ComponentModel.DataAnnotations;

using Bie.Business.Enums;
using Bie.Business.ValueObjects;

namespace Bie.Business.Models.Base;
public abstract class ProfileBase : EntityBase
{
    protected ProfileBase(string name, string email, Guid? cityId = null,
                            string? address = null, string? addressNumber = null,
                            string? postalCode = null, Url? imageUrl = null,
                            bool autoGeneratedImage = false, string? imagePrompt = null,
                            Base64? imageBase64 = null) : base()
    {
        Name = name;
        Email = email;

        CityId = cityId;
        Address = address;
        AddressNumber = addressNumber;
        PostalCode = postalCode;
        ImageUrl = imageUrl != null && imageUrl.IsValid ? imageUrl.Address : "";
        AutoGeneratedImage = autoGeneratedImage;
        ImagePrompt = imagePrompt;
        ImageBase64 = imageBase64;
    }

    [Required]
    public string Name { get; private set; }
    [Required]
    public string Email { get; private set; }
    public Guid? CityId { get; private set; }
    public City? City { get; private set; }
    public string? Address { get; private set; }
    public string? AddressNumber { get; private set; }
    public string? PostalCode { get; private set; }
    public string? ImageUrl { get; private set; }
    public bool AutoGeneratedImage { get; private set; }
    public string? ImagePrompt { get; private set; }
    public Base64? ImageBase64 { get; private set; }
    public DateTime? InactiveDate { get; protected set; }
    public IList<Scheduling>? Schedulings { get; private set; }

    public virtual void Inactivate()
    {
        if (Status == StatusEnum.Active && InactiveDate == null)
        {
            Status = StatusEnum.Inactive;
            InactiveDate = DateTime.Now;
        }
    }
    public void SetImageUrl(Url url)
    {
        if (url.IsValid)
            ImageUrl = url.Address;
    }
    public void SetGeneratedImage(Base64 base64, string prompt)
    {
        if (base64.IsValid && !string.IsNullOrEmpty(prompt))
        {
            ImageBase64 = base64;
            ImagePrompt = prompt;
            AutoGeneratedImage = true;
        }
    }
}